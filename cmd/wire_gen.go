// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/bzdanny/BaiZe/app/routes"
	"github.com/bzdanny/BaiZe/app/setting"
	"github.com/bzdanny/BaiZe/app/system/systemController"
	"github.com/bzdanny/BaiZe/app/system/systemDao/systemDaoImpl"
	"github.com/bzdanny/BaiZe/app/system/systemService/systemServiceImpl"
	"github.com/bzdanny/BaiZe/baize/datasource"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func wireApp(settingDatasource *setting.Datasource) (*gin.Engine, func(), error) {
	data, cleanup, err := datasource.NewData(settingDatasource)
	if err != nil {
		return nil, nil, err
	}
	sysDictDataDao := systemDaoImpl.NewSysDictDataDao()
	dictDataService := systemServiceImpl.NewDictDataService(data, sysDictDataDao)
	dictDataController := systemController.NewDictDataController(dictDataService)
	sysDictTypeDao := systemDaoImpl.NewSysDictTypeDao()
	dictTypeService := systemServiceImpl.NewDictTypeService(data, sysDictTypeDao)
	dictTypeController := systemController.NewDictTypeController(dictTypeService)
	sysUserDao := systemDaoImpl.GetSysUserDao()
	sysMenuDao := systemDaoImpl.NewSysMenuDao()
	sysRoleDao := systemDaoImpl.NewSysRoleDao()
	loginService := systemServiceImpl.NewLoginService(data, sysUserDao, sysMenuDao, sysRoleDao)
	sysUserPostDao := systemDaoImpl.NewSysUserPostDao()
	sysUserRoleDao := systemDaoImpl.NewSysUserRoleDao()
	userService := systemServiceImpl.NewUserService(data, sysUserDao, sysUserPostDao, sysUserRoleDao)
	sysRoleMenuDao := systemDaoImpl.NewSysRoleMenuDao()
	menuService := systemServiceImpl.NewMenuService(data, sysMenuDao, sysRoleMenuDao, sysRoleDao)
	loginController := systemController.NewLoginController(loginService, userService, menuService)
	sysPostDao := systemDaoImpl.NewSysPostDao()
	postService := systemServiceImpl.NewPostService(data, sysPostDao)
	sysRoleDeptDao := systemDaoImpl.NewSysRoleDeptDao()
	roleService := systemServiceImpl.NewRoleService(data, sysRoleDao, sysRoleMenuDao, sysRoleDeptDao, sysUserRoleDao)
	userController := systemController.NewUserController(userService, postService, roleService)
	sysDeptDao := systemDaoImpl.NewSysDeptDao()
	deptService := systemServiceImpl.NewDeptService(data, sysDeptDao, sysRoleDao)
	deptController := systemController.NewDeptController(deptService)
	roleController := systemController.NewRoleController(roleService)
	postController := systemController.NewPostController(postService)
	menuController := systemController.NewMenuController(menuService)
	profileController := systemController.NewProfileController(roleService, postService, userService)
	systemControllerSystemController := systemController.NewTenantController(dictDataController, dictTypeController, loginController, userController, deptController, roleController, postController, menuController, profileController)
	router := routes.NewRouter(systemControllerSystemController)
	engine := newApp(router)
	return engine, func() {
		cleanup()
	}, nil
}
