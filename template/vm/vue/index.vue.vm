{{$Left := "{{" }} {{$Right := "}}" }} {{$pkField :=""}}
{{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$pkField = $column.HtmlField}}{{end}}{{end}}

<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryRef" :inline="true" v-show="showSearch" label-width="68px">
{{range $index, $column := .table.Columns}}{{if eq $column.IsQuery "1"}}
{{if eq $column.HtmlType "input"}}
    <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
        <el-input
          v-model="queryParams.{{$column.HtmlField}}"
          placeholder="请输入{{$column.ColumnComment}}"
          clearable
          @keyup.enter="handleQuery"
        />
    </el-form-item>{{else}}{{if eq $column.HtmlType "select" "radio"}}
    {{$column.DictType}}
        {{if eq $column.DictType ""}}
          <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
            <el-select v-model="queryParams.{{$column.HtmlField}}" placeholder="请选择{{$column.ColumnComment}}" clearable>
              <el-option label="请选择字典生成" value="" />
            </el-select>
          </el-form-item>
        {{else}}
        <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
            <el-select v-model="queryParams.{{$column.HtmlField}}" placeholder="请选择{{$column.ColumnComment}}" clearable>
                <el-option
                    v-for="dict in {{$column.DictType}}"
                    :key="dict.value"
                    :label="dict.label"
                    :value="dict.value"
                    />
                </el-select>
            </el-form-item>
        {{end}}
    {{else}}{{if eq $column.HtmlType "datetime"}}
        {{if eq $column.QueryType "BETWEEN"}}
        <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
                <el-date-picker clearable
                  v-model="queryParams.{{$column.HtmlField}}"
                  type="date"
                  value-format="YYYY-MM-DD"
                  placeholder="选择${{$column.ColumnComment}}">
                </el-date-picker>
              </el-form-item>
        {{else}}
        <el-form-item label="{{$column.ColumnComment}}" style="width: 308px">
                <el-date-picker
                  v-model="daterange{{$column.GoField}}"
                  value-format="YYYY-MM-DD"
                  type="daterange"
                  range-separator="-"
                  start-placeholder="开始日期"
                  end-placeholder="结束日期"
                ></el-date-picker>
        </el-form-item>
    {{end}}
{{end}}{{end}}{{end}}{{end}}{{end}}
    <el-form-item>
        <el-button type="primary" icon="Search" @click="handleQuery">搜索</el-button>
        <el-button icon="Refresh" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="Plus"
          @click="handleAdd"
          v-hasPermi="['{{.table.PackageName}}:{{.table.BusinessName}}:add']"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="Edit"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['{{.table.PackageName}}:{{.table.BusinessName}}:edit']"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="Delete"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['{{.table.PackageName}}:{{.table.BusinessName}}:remove']"
        >删除</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="warning"
          plain
          icon="Download"
          @click="handleExport"
          v-hasPermi="['{{.table.PackageName}}:{{.table.BusinessName}}:export']"
        >导出</el-button>
      </el-col>
      <right-toolbar v-model:showSearch="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table v-loading="loading" :data="{{.table.BusinessName}}List" @selection-change="handleSelectionChange">
      <el-table-column type="selection" width="55" align="center" />
{{range $index, $column := .table.Columns}}
{{if eq $column.IsPk "1"}}
    <el-table-column label="{{$column.ColumnComment}}" align="center" prop="{{$column.HtmlField}}" />
{{else}}{{if eq $column.IsList "1"}}
    {{if eq $column.HtmlType "imageUpload"}}
      <el-table-column label="{{$column.ColumnComment}}" align="center" prop="{{$column.HtmlField}}" width="100">
        <template #default="scope">
          <image-preview :src="scope.row.{{$column.HtmlField}}" :width="50" :height="50"/>
        </template>
      </el-table-column>
     {{end}}
     {{if ne $column.HtmlType ""}}
      <el-table-column label="{{$column.ColumnComment}}" align="center" prop="{{$column.HtmlField}}">
              <template #default="scope">
        {{if eq $column.HtmlType "checkbox"}}
            <dict-tag :options="{{$column.DictType}}" :value="scope.row.{{$column.HtmlField}}? scope.row.{{$column.HtmlField}}.split(',') : []"/>
        {{else}}
            <dict-tag :options="{{$column.DictType}}" :value="scope.row.{{$column.HtmlField}}"/>
        {{end}}
        </template>
      </el-table-column>
     {{end}}
      {{if ne $column.HtmlField ""}}
            <el-table-column label="{{$column.ColumnComment}}" align="center" prop="{{$column.HtmlField}}" />
      {{end}}
{{end}}
{{end}}
{{end}}

      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template #default="scope">
          <el-button
            type="text"
            icon="Edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['{{.table.PackageName}}:{{.table.BusinessName}}:edit']"
          >修改</el-button>
          <el-button
            type="text"
            icon="Delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['{{.table.PackageName}}:{{.table.BusinessName}}:remove']"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      v-show="total>0"
      :total="total"
      v-model:page="queryParams.pageNum"
      v-model:limit="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改{{.table.FunctionName}}对话框 -->
    <el-dialog :title="title" v-model="open" width="500px" append-to-body>
      <el-form ref="{{.table.BusinessName}}Ref" :model="form" :rules="rules" label-width="80px">
{{range $index, $column := .table.Columns}}
    {{if ne $column.IsQuery "1"}}
    {{if eq "1" $column.IsInsert $column.IsEdit}}
    {{if eq $column.HtmlType "input"}}
        <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
          <el-input v-model="form.{{$column.HtmlField}}" placeholder="请输入{{$column.ColumnComment}} />
        </el-form-item>
    {{else if eq $column.HtmlType "imageUpload"}}
        <el-form-item label="{{$column.ColumnComment}}">
          <image-upload v-model="form.{{$column.HtmlField}}"/>
        </el-form-item>
    {{else if eq $column.HtmlType "fileUpload"}}
        <el-form-item label="{{$column.ColumnComment}}">
          <file-upload v-model="form.{{$column.HtmlField}}"/>
        </el-form-item>
    {{else if eq $column.HtmlType "editor"}}
        <el-form-item label="{{$column.ColumnComment}}">
          <editor v-model="form.{{$column.HtmlField}}" :min-height="192"/>
        </el-form-item>
    {{else if eq $column.HtmlType "select"}}
        {{if ne $column.DictType ""}}
        <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
          <el-select v-model="form.{{$column.HtmlField}}" placeholder="请选择{{$column.ColumnComment}}">
            <el-option
              v-for="dict in ${dictType}"
              :key="dict.value"
              :label="dict.label"
              {{if eq $column.GoType "int" "int64"}}:value="parseInt(dict.value)"{{else}}:value="dict.value"{{end}}
            ></el-option>
          </el-select>
        </el-form-item>
        {{else}}
        <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
          <el-select v-model="form.{{$column.HtmlField}}" placeholder="请选择{{$column.ColumnComment}}">
            <el-option label="请选择字典生成" value="" />
          </el-select>
        </el-form-item>
        {{end}}
    {{else if eq $column.HtmlType "checkbox"}}
         {{if ne $column.DictType ""}}
        <el-form-item label="{{$column.ColumnComment}}">
          <el-checkbox-group v-model="form.{{$column.HtmlField}}">
            <el-checkbox
              v-for="dict in ${dictType}"
              :key="dict.value"
              :label="dict.value">
              {{$Left}}dict.label{{$Right}}
            </el-checkbox>
          </el-checkbox-group>
        </el-form-item>
         {{else}}
        <el-form-item label="{{$column.ColumnComment}}">
          <el-checkbox-group v-model="form.{{$column.HtmlField}}">
            <el-checkbox>请选择字典生成</el-checkbox>
          </el-checkbox-group>
        </el-form-item>
         {{end}}
    {{else if eq $column.HtmlType "radio"}}
         {{if ne $column.DictType ""}}
        <el-form-item label="{{$column.ColumnComment}}">
        <el-form-item label="{{$column.ColumnComment}}">
          <el-radio-group v-model="form.{{$column.HtmlField}}">
            <el-radio
              v-for="dict in ${dictType}"
              :key="dict.value"
              {{if eq $column.GoType "int" "int64"}}:label="parseInt(dict.value)"{{else}}:label="dict.value"{{end}}
            >{{$Left}}dict.label{{$Right}}</el-radio>
          </el-radio-group>
        </el-form-item>
         {{else}}
        <el-form-item label="{{$column.ColumnComment}}">
          <el-checkbox-group v-model="form.{{$column.HtmlField}}">
            <el-checkbox>请选择字典生成</el-checkbox>
          </el-checkbox-group>
        </el-form-item>
         {{end}}
        {{else if eq $column.HtmlType "datetime"}}
        <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
          <el-date-picker clearable
            v-model="form.{{$column.HtmlField}}"
            type="date"
            value-format="YYYY-MM-DD"
            placeholder="选择{{$column.ColumnComment}}">
          </el-date-picker>
        </el-form-item>
        {{else if eq $column.HtmlType "textarea"}}
        <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.HtmlField}}">
          <el-input v-model="form.{{$column.HtmlField}}" type="textarea" placeholder="请输入内容" />
        </el-form-item>
{{end}}{{end}}{{end}}{{end}}
      </el-form>
      <template #footer>
        <div class="dialog-footer">
          <el-button type="primary" @click="submitForm">确 定</el-button>
          <el-button @click="cancel">取 消</el-button>
        </div>
      </template>
    </el-dialog>
  </div>
</template>

<script setup name="{{.table.BusinessName}}" >
import { list{{.table.ClassName}}, get{{.table.ClassName}}, del{{.table.ClassName}}, add{{.table.ClassName}}, update{{.table.ClassName}} } from "@/api/{{.table.ModuleName}}/{{.table.BusinessName}}";

const { proxy } = getCurrentInstance();

const {{.table.BusinessName}}List = ref([]);

const open = ref(false);
const loading = ref(true);
const showSearch = ref(true);
const ids = ref([]);
const single = ref(true);
const multiple = ref(true);
const total = ref(0);
const title = ref("");

{{range $index, $column := .table.Columns}}{{if eq $column.HtmlType "datetime"}}{{if eq $column.QueryType "BETWEEN"}}
const daterange${$column.GoField} = ref([]);
{{end}}{{end}}{{end}}

const data = reactive({
  form: {},
  queryParams: {
    pageNum: 1,
    pageSize: 10,
    {{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}
    {{$column.HtmlField}}: null
    {{end}}
    {{end}}
  },
  rules: {
  {{range $index, $column := .table.Columns}}
  {{if eq $column.IsRequired "1"}}
   {{$column.HtmlField}}: [
        { required: true, message: "{{$column.ColumnComment}}不能为空", trigger: {{if eq $column.HtmlType "select"}}"change"{{else}}"blur"{{end}} }
      ]
   {{end}}{{end}}
  }
});

const { queryParams, form, rules } = toRefs(data);

/** 查询{{.table.FunctionName}}列表 */
function getList() {
  loading.value = true;
  {{range $index, $column := .table.Columns}}{{if eq $column.HtmlType "datetime"}}{{if eq $column.QueryType "BETWEEN"}}
    if (null != daterange{{$column.GoField}} && '' != daterange{{$column.GoField}}) {
      queryParams.value.params["begin{{$column.GoField}}"] = daterange{{$column.GoField}}.value[0];
      queryParams.value.params["end{{$column.GoField}}"] = daterange{{$column.GoField}}.value[1];
    }
  {{end}}{{end}}{{end}}
  list{{.table.ClassName}}(queryParams.value).then(response => {
    {{.table.ClassName}}List.value = response.rows;
    total.value = response.total;
    loading.value = false;
  });

// 取消按钮
function cancel() {
  open.value = false;
  reset();
}

// 表单重置
function reset() {
  form.value = {
  {{range $index, $column := .table.Columns}}
  {{if eq $column.HtmlType  "radio"}}
        {{$column.HtmlField}}:{{if eq $column.GoType "int" "int64"}}0{{else}}"0"{{end}}
  {{else if eq $column.HtmlType  "checkbox"}}
        {{$column.HtmlField}}:[]
  {{else}}
        {{$column.HtmlField}}:null
  {{end}}{{end}}
  proxy.resetForm("{{.table.BusinessName}}Ref");
}

/** 搜索按钮操作 */
function handleQuery() {
  queryParams.value.pageNum = 1;
  getList();
}

/** 重置按钮操作 */
function resetQuery() {
  {{range $index, $column := .table.Columns}}{{if eq $column.HtmlType "datetime"}}{{if eq $column.QueryType "BETWEEN"}}
  daterange${AttrName}.value = [];
  {{end}}{{end}}{{end}}
  proxy.resetForm("queryRef");
  handleQuery();
}

// 多选框选中数据
function handleSelectionChange(selection) {
  ids.value = selection.map(item => item.{{$pkField}});
  single.value = selection.length != 1;
  multiple.value = !selection.length;
}

/** 新增按钮操作 */
function handleAdd() {
  reset();
  open.value = true;
  title.value = "添加{{.table.FunctionName}}";
}

/** 修改按钮操作 */
function handleUpdate(row) {
  reset();
  const {{$pkField}} = row.{{$pkField}} || ids.value
    get{{.table.BusinessName}}{{$pkField}}.then(response => {
     form.value = response.data;
    open.value = true;
    title.value = "修改{{.table.FunctionName}}";
  });
}

/** 提交按钮 */
function submitForm() {
  proxy.$refs["{{.table.BusinessName}}Ref"].validate(valid => {
    if (valid) {
 if (form.value.{{$pkField}} != null) {
        update{{.table.BusinessName}}(form.value).then(response => {
          proxy.$modal.msgSuccess("修改成功");
          open.value = false;
          getList();
        });
      } else {
        add{{.table.BusinessName}}(form.value).then(response => {
          proxy.$modal.msgSuccess("新增成功");
          open.value = false;
          getList();
        });
      }
    }
  });
}

/** 删除按钮操作 */
function handleDelete(row) {
  const {{$pkField}}s = row.{{$pkField}} || ids.value;
  proxy.$modal.confirm('是否确认删除{{.table.FunctionName}}编号为"' + {{$pkField}}s + '"的数据项？').then(function() {
    return del{{.table.BusinessName}}({{$pkField}}s);
  }).then(() => {
    getList();
    proxy.$modal.msgSuccess("删除成功");
  }).catch(() => {});
}

/** 导出按钮操作 */
function handleExport() {
  proxy.download('{{.table.ModuleName}}/{{.table.BusinessName}}/export', {
    ...queryParams.value
  }, `{{.table.BusinessName}}_${new Date().getTime()}.xlsx`)
}

getList();
</script>
