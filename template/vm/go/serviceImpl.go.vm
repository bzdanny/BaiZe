package {{.table.PackageName}}ServiceImpl

import (
	"baize/app/{{.table.PackageName}}/{{.table.PackageName}}Dao"
	"baize/app/{{.table.PackageName}}/{{.table.PackageName}}Dao/{{.table.PackageName}}DaoImpl"
	"baize/app/{{.table.PackageName}}/{{.table.PackageName}}Models"
	"baize/app/utils/exceLize"
    "baize/app/utils/snowflake"
)

var {{.table.BusinessName}}ServiceImpl *{{.table.BusinessName}}Service


type {{.table.BusinessName}}Service struct {
	{{.table.BusinessName}}Dao {{.table.PackageName}}Dao.I{{.table.ClassName}}Dao
}

func init() {
	{{.table.BusinessName}}ServiceImpl = &{{.table.BusinessName}}Service{ {{.table.BusinessName}}Dao: {{.table.PackageName}}DaoImpl.Get{{.table.ClassName}}Dao()}
}


func Get{{.table.ClassName}}Service() *{{.table.BusinessName}}Service {
	return {{.table.BusinessName}}ServiceImpl
}


func ({{.table.BusinessName}}Service *{{.table.BusinessName}}Service) Select{{.table.ClassName}}List({{.table.BusinessName}} *{{.table.PackageName}}Models.{{.table.ClassName}}DQL) ({{.table.BusinessName}}List []*{{.table.PackageName}}Models.{{.table.ClassName}}Vo, total *int64){
    return {{.table.BusinessName}}Service.{{.table.BusinessName}}Dao.Select{{.table.ClassName}}List({{.table.BusinessName}})
}

func ({{.table.BusinessName}}Service *{{.table.BusinessName}}Service) Export{{.table.ClassName}}({{.table.BusinessName}} *{{.table.PackageName}}Models.{{.table.ClassName}}DQL) (data []byte){
	{{.table.BusinessName}}List, _ := {{.table.BusinessName}}Service.{{.table.BusinessName}}Dao.Select{{.table.ClassName}}List({{.table.BusinessName}})
	return exceLize.SetRows({{.table.PackageName}}Models.{{.table.ClassName}}ListToRows({{.table.BusinessName}}List))
}

func ({{.table.BusinessName}}Service *{{.table.BusinessName}}Service) Select{{.table.ClassName}}ById({{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$column.HtmlField}} {{$column.GoType}}{{end}}{{end}}) ({{.table.BusinessName}} *{{.table.PackageName}}Models.{{.table.ClassName}}Vo){
    return {{.table.BusinessName}}Service.{{.table.BusinessName}}Dao.Select{{.table.ClassName}}ById({{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$column.HtmlField}}{{end}}{{end}})
}

func ({{.table.BusinessName}}Service *{{.table.BusinessName}}Service) Insert{{.table.ClassName}}({{.table.BusinessName}} *{{.table.PackageName}}Models.{{.table.ClassName}}DML){
    {{.table.BusinessName}}.{{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$column.GoField}}{{end}}{{end}} = snowflake.GenID()
    {{.table.BusinessName}}Service.{{.table.BusinessName}}Dao.Insert{{.table.ClassName}}({{.table.BusinessName}})
}

func ({{.table.BusinessName}}Service *{{.table.BusinessName}}Service) Update{{.table.ClassName}}({{.table.BusinessName}} *{{.table.PackageName}}Models.{{.table.ClassName}}DML){
    {{.table.BusinessName}}Service.{{.table.BusinessName}}Dao.Update{{.table.ClassName}}({{.table.BusinessName}})
}

func ({{.table.BusinessName}}Service *{{.table.BusinessName}}Service) Delete{{.table.ClassName}}ByIds({{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$column.HtmlField}}s []{{$column.GoType}}{{end}}{{end}}){
     {{.table.BusinessName}}Service.{{.table.BusinessName}}Dao.Delete{{.table.ClassName}}ByIds({{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$column.HtmlField}}s{{end}}{{end}})
}